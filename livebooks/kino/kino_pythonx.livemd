# KinoPythonx

```elixir
Mix.install([
  {:pythonx, "~> 0.4.2"},
  {:kino_pythonx, "~> 0.1.0"},
  {:nx, "~> 0.9.2"},
  {:explorer, "~> 0.10.1"}
])
```

```pyproject.toml
[project]
name = "project"
version = "0.0.0"
requires-python = "==3.13.*"
dependencies = [
  "numpy == 2.2.*",
  "pandas == 2.2.*",
  "scikit-learn == 1.6.*"
]
```

## Python実行

```python
print("Hello, world!")
```

```python
1 + 2
```

```python
total = sum([1, 2, 3]) 
```

```python
total
```

```python
import numpy as np
```

```python
a1 = np.array([1, 2])
a2 = np.array([3, 4])

np.dot(a1, a2)
```

## 数値

```elixir
a = 1
b = 2

{a, b}
```

```python
c = a + b
d = a * b

(c, d)
```

```elixir
{c, d}
```

```elixir
Pythonx.decode(c) + Pythonx.decode(d)
```

## 文字列

```elixir
i = "hello"
j = "world"

{i, j}
```

```python
k = i + j
l = f"{i.decode()}, {j.decode()}"

(k, l)
```

```elixir
{k, l}
```

```elixir
Pythonx.decode(k) <> " " <> Pythonx.decode(l)
```

## 配列

```elixir
o = [1, 2, 3]
p = [4, 5, 6]

{o, p}
```

```python
q = o + p
q
```

```elixir
q |> Pythonx.decode() |> Enum.sum()
```

## マップ

```elixir
x = %{"name" => "ryo", :age => 40}
```

```python
x
```

```python
(x['age'], x[b'name'])
```

```python
y = x
y['country'] = 'japan'

y
```

```elixir
Pythonx.decode(y)
```

## タプル

```elixir
s = {1, 2}
```

```python
t = s
t
```

```elixir
Pythonx.decode(t)
```

## キーワードリスト

```elixir
u = [a: 1, b: "b", c: :c]
```

```python
v = u
v
```

```elixir
Pythonx.decode(v)
```

## テンソル

```elixir
tensor = Nx.tensor([[1, 2], [3, 4]])
```

```elixir
py_tensor = Nx.to_list(tensor)
```

```python
array = np.array(py_tensor)
array
```

```python
ex_array = array.tolist()
ex_array
```

```elixir
ex_array
|> Pythonx.decode()
|> Nx.tensor()
```

## データフレーム

```python
import pandas as pd
from sklearn.datasets import load_iris
```

```python
iris = load_iris()
iris
```

```python
df = pd.DataFrame(data = iris.data, columns = iris.feature_names)
df
```

```elixir
ex_df =
  df
  |> Pythonx.decode()
  |> Explorer.DataFrame.new()
```

```elixir
Kino.DataTable.new(ex_df)
```

```elixir
py_data =
  ex_df
  |> Explorer.DataFrame.to_rows()
  |> Pythonx.encode!()
```

```python
pd.DataFrame.from_records(py_data)
```
