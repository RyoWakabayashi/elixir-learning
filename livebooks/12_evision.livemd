# evision

```elixir
Mix.install([
  {:download, "~> 0.0.4"},
  {:evision, "~> 0.1"},
  {:kino, "~> 0.7"},
  {:nx, "~> 0.4"}
])
```

## 準備

```elixir
alias Evision, as: OpenCV
```

## 画像のダウンロード

```elixir
# 再実行時、Download.from()でeexistエラーになるのを防止
File.rm("Lenna_%28test_image%29.png")

lenna =
  Download.from("https://upload.wikimedia.org/wikipedia/en/7/7d/Lenna_%28test_image%29.png")
  |> elem(1)
```

```elixir
lenna
|> File.read!()
|> Kino.Image.new(:jpeg)
```

## 画像の読込

```elixir
[
  [
    [255, 0, 0],
    [255, 128, 0],
    [255, 255, 0]
  ],
  [
    [0, 255, 0],
    [0, 255, 128],
    [0, 255, 255]
  ],
  [
    [0, 0, 255],
    [128, 0, 255],
    [255, 0, 255]
  ]
]
|> Nx.tensor(type: {:u, 8})
|> OpenCV.Mat.from_nx_2d()
|> OpenCV.resize({300, 300}, interpolation: OpenCV.cv_INTER_AREA())
```

```elixir
mat = OpenCV.imread(lenna)
```

```elixir
size = OpenCV.Mat.shape(mat)
```

```elixir
mat
|> OpenCV.Mat.to_nx()
```

```elixir
mat
|> OpenCV.Mat.to_nx(Nx.BinaryBackend)
|> Nx.transpose(axes: [1, 0, 2])
|> OpenCV.Mat.from_nx_2d()
|> dbg
```

```elixir
mat
|> OpenCV.Mat.to_nx(Nx.BinaryBackend)
|> Nx.mean(axes: [2])
|> Nx.broadcast({512, 512, 3}, axes: [0, 1])
|> OpenCV.Mat.from_nx_2d()
|> dbg
```

## リサイズ

```elixir
resized_mat =
  mat
  |> OpenCV.resize({256, 128})
```

## グレースケール

```elixir
lenna
|> OpenCV.imread(flags: OpenCV.cv_IMREAD_GRAYSCALE())
```

## 二値化

```elixir
{threshold, mono_mat} =
  lenna
  |> OpenCV.imread(flags: OpenCV.cv_IMREAD_GRAYSCALE())
  |> OpenCV.threshold(127, 255, OpenCV.cv_THRESH_BINARY())

IO.inspect(threshold)

mono_mat
```

## 並進

```elixir
affine =
  [
    [1, 0, 100],
    [0, 1, 50]
  ]
  |> Nx.tensor(type: {:f, 32})
  |> OpenCV.Mat.from_nx()

lenna
|> OpenCV.imread()
|> OpenCV.warpAffine(affine, {512, 512})
```

## 回転

```elixir
affine = OpenCV.getRotationMatrix2D({512 / 2, 512 / 2}, 90, 1)

lenna
|> OpenCV.imread()
|> OpenCV.warpAffine(affine, {512, 512})
```

## ブラー

```elixir
lenna
|> OpenCV.imread()
|> OpenCV.blur({9, 9})
```

## メディアンブラー

```elixir
lenna
|> OpenCV.imread()
|> OpenCV.medianBlur(9)
```

## ガウシアンブラー

```elixir
lenna
|> OpenCV.imread()
|> OpenCV.gaussianBlur({9, 9}, 5)
```

## 図形描画

```elixir
lenna
|> OpenCV.imread()
|> OpenCV.rectangle({50, 10}, {125, 60}, {255, 0, 0})
|> OpenCV.rectangle({250, 60}, {325, 110}, {0, 255, 0}, thickness: -1)
|> OpenCV.rectangle({150, 120}, {225, 320}, {0, 0, 255},
  thickness: 5,
  lineType: OpenCV.cv_LINE_4()
)
|> OpenCV.ellipse({300, 300}, {100, 200}, 30, 0, 360, {255, 255, 0}, thickness: 3)
```
