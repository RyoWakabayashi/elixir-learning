# Distributed AI client

```elixir
Mix.install(
  [
    {:kino_bumblebee, "~> 0.4"},
    {:exla, "~> 0.7"}
  ],
  config: [nx: [default_backend: EXLA.Backend]]
)
```

## Connect to server

```elixir
{node, coockie} =
  {:"3k4lpr4q-livebook-server@192.168.8.157",
   :"c_vDI22GjTvH5x-kPdObzLkDYgOzk2hVfQGRck2vfh-lQV1-xirDoN"}

Node.set_cookie(node, coockie)

Node.connect(node)
```

## Call server AI

```elixir
image_input = Kino.Input.image("Image", size: {224, 224})
form = Kino.Control.form([image: image_input], submit: "Run")
frame = Kino.Frame.new()

Kino.listen(form, fn %{data: %{image: image}} ->
  if image do
    Kino.Frame.render(frame, Kino.Text.new("Running..."))

    image = image.data |> Nx.from_binary(:u8) |> Nx.reshape({image.height, image.width, 3})

    output = Nx.Serving.batched_run(ViT, image)

    output.predictions
    |> Enum.map(&{&1.label, &1.score})
    |> Kino.Bumblebee.ScoredList.new()
    |> then(&Kino.Frame.render(frame, &1))
  end
end)

Kino.Layout.grid([form, frame], boxed: true, gap: 16)
```
