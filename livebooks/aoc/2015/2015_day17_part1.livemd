# Advent of Code 2015 Day 17 Part 1

```elixir
Mix.install([
  {:kino_aoc, "~> 0.1"}
])
```

## Get Inputs

<!-- livebook:{"attrs":"eyJhc3NpZ25fdG8iOiJwdXp6bGVfaW5wdXQiLCJkYXkiOiIxNyIsInNlc3Npb25fc2VjcmV0IjoiU0VTU0lPTiIsInllYXIiOiIyMDE1In0","chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2015", "17", System.fetch_env!("LB_SESSION"))
```

## My answer

```elixir
containers =
  puzzle_input
  |> String.split("\n")
  |> Enum.map(&String.to_integer(&1))
  |> Enum.sort(:desc)
```

```elixir
defmodule Combinations do
  def get(_, n) when n == 0, do: [[]]
  def get([], _), do: []
  def get([head | tail], n) do
    with_head =
      tail
      |> get(n - 1)
      |> Enum.map(fn combo -> [head | combo] end)

    without_head = get(tail, n)

    with_head ++ without_head
  end
end
```

```elixir
1..20
|> Enum.map(fn length ->
  containers
  |> Combinations.get(length)
  |> Enum.count(fn combination -> Enum.sum(combination) == 150 end)
end)
|> Enum.sum()
```
